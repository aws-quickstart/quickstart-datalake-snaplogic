{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template uses the Snaplogic Snaplex Server templates with the AWS VPC quickstart.  The AWS VPC creates a multi-AZ, multi-subnet VPC infrastructure with managed NAT gateways in the public subnet for each Availability Zone. The Snaplogic servers are deployed to the public subnet with the exception of the CloudplexServers which are deployed to the private subnet and Bastion servers to a VPC. **WARNING** This template creates AWS resources. You will be billed for the AWS resources used if you create a stack from this template. (qs-1nrlpbhnf)",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network configuration"
                    },
                    "Parameters": [
                        "AvailabilityZones",
                        "VPCCIDR",
                        "PublicSubnet1CIDR",
                        "PublicSubnet2CIDR",
                        "PrivateSubnet1CIDR",
                        "PrivateSubnet2CIDR",
                        "RemoteAccessCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "EC2 Auto Scaling configuration"
                    },
                    "Parameters": [
                        "CloudplexServerAutoscaleDesiredCapacity",
                        "CloudplexServerAutoscaleMaxSize"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon Redshift configuration"
                    },
                    "Parameters": [
                        "RedshiftHost",
                        "RedshiftUsername",
                        "RedshiftPassword",
                        "RedshiftDbName"
                    ]
                },
                {
                    "Label": {
                        "default": "Snaplogic configuration"
                    },
                    "Parameters": [
                        "SnapLogicLicenseBucket",
                        "SnaplexconfS3KeyPrefix"
                    ]
                },
                {
                    "Label": {
                        "default": "Sizing configuration"
                    },
                    "Parameters": [
                        "KeyPairName",
                        "InstanceType",
                        "BastionInstanceType",
                        "NumBastionHosts",
                        "RedshiftNodeType",
                        "RedshiftNumberOfNodes"
                    ]
                },
                {
                    "Label": {
                        "default": "Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix (optional)"
                },
                "SnapLogicLicenseBucket": {
                    "default": "SnapLogicLicense Bucket"
                },
                "InstanceType": {
                    "default": "Instance Type"
                },
                "SnaplexconfS3KeyPrefix": {
                    "default": "Snaplex S3 Key Prefix (optional)"
                },
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
                "PublicSubnet1CIDR": {
                    "default": "Public Subnet1 CIDR"
                },
                "PublicSubnet2CIDR": {
                    "default": "Public Subnet2 CIDR"
                },
                "PrivateSubnet1CIDR": {
                    "default": "Private Subnet1 CIDR"
                },
                "PrivateSubnet2CIDR": {
                    "default": "Private Subnet2 CIDR"
                },
                "RemoteAccessCIDR": {
                    "default": "Remote Access CIDR"
                },
                "KeyPairName": {
                    "default": "Key Pair Name"
                },
                "CloudplexServerAutoscaleDesiredCapacity": {
                    "default": "CloudplexServer Autoscale Desired Capacity"
                },
                "CloudplexServerAutoscaleMaxSize": {
                    "default": "CloudplexServer Autoscale Maximum Capacity"
                },
                "RedshiftHost": {
                    "default": "Amazon Redshift Host (optional)"
                },
                "RedshiftDbName": {
                    "default": "Amazon Redshift Database Name"
                },
                "RedshiftUsername": {
                    "default": "Amazon Redshift Username"
                },
                "RedshiftPassword": {
                    "default": "Amazon Redshift Password"
                },
                "BastionInstanceType": {
                    "default": "Bastion Instance Type"
                },
                "NumBastionHosts": {
                    "default": "Number of Bastion Hosts"
                },
                "RedshiftNodeType": {
                    "default": "Amazon Redshift Node Type"
                },
                "RedshiftNumberOfNodes": {
                    "default": "Number of Amazon Redshift Nodes"
                }
            }
        }
    },
    "Parameters": {
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, periods (.), and hyphens (-). It cannot start or end with a hyphen (-) or period (.).",
            "Default": "snaplex",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, periods (.), and hyphens (-). It cannot start or end with a hyphen (-) or period (.).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).  Prefix cannot start with a slash but must end with a slash unless it is the empty string.",
            "Description": "The S3 key name prefix used to simulate a folder for your copy of Quick Start assets, if you decide to customize or extend the Quick Start for your own use. This prefix can include numbers, lowercase letters, uppercase letters, hyphens, and forward slashes",
            "Default": "quickstart-datalake-snaplogic/",
            "Type": "String"
        },
        "SnapLogicLicenseBucket": {
            "Description": "Bucket holding SnapLogicLicense",
            "Type": "String",
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-.]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, periods (.), and hyphens (-). It cannot start or end with a hyphen (-) or period (.)."
        },
        "SnaplexconfS3KeyPrefix": {
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).  Prefix cannot start with a slash but must end with a slash unless it is the empty string.",
            "Default": "",
            "Description": "S3 key prefix for the Snaplex config assets. Snaplex key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).  Prefix cannot start with a slash but must end with a slash unless it is the empty string.",
            "Type": "String"
        },
        "InstanceType": {
            "Description": "EC2 Instance type for Snaplogic CloudplexServers",
            "Type": "String",
            "Default": "t2.large",
            "AllowedValues": [
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m4.16xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "x1.16xlarge",
                "x1.32xlarge",
                "x1e.32xlarge",
                "r4.large",
                "r4.xlarge",
                "r4.2xlarge",
                "r4.4xlarge",
                "r4.8xlarge",
                "r4.16xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "i3.large",
                "i3.xlarge",
                "i3.2xlarge",
                "i3.4xlarge",
                "i3.8xlarge",
                "i3.16xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "BastionInstanceType": {
            "Description": "EC2 instance type for bastion host",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ]
        },
        "RedshiftHost": {
            "Description": "DNS name or IP address of the master node of an existing Redshift cluster which you intend to use for the Snaplogic sample jobs. Leave this blank to create a new redshift cluster.",
            "Type": "String",
            "Default": ""
        },
        "RedshiftUsername": {
            "Description": "User name for Redshift database",
            "Type": "String",
            "Default": "tadmin"
        },
        "RedshiftPassword": {
            "Description": "Password for Redshift. Can only contain alphanumeric characters or the following special characters!^*-_+",
            "NoEcho": true,
            "Type": "String",
            "MinLength": 8,
            "MaxLength": 28,
            "AllowedPattern": "[a-zA-Z0-9!^*\\-_+]*"
        },
        "RedshiftDbName": {
            "Description": "Database name for Redshift",
            "Type": "String",
            "Default": ""
        },
        "RedshiftNodeType": {
            "Type": "String",
            "Default": "dc2.large",
            "Description": "EC2 instance type for the Redshift cluster nodes",
            "ConstraintDescription": "must be a valid RedShift node type.",
            "AllowedValues": [
                "dc2.large",
                "dc2.8xlarge",
                "ds2.xlarge",
                "ds2.8xlarge"
            ]
        },
        "RedshiftNumberOfNodes": {
            "Description": "The number of nodes in the Redshift cluster.",
            "Type": "Number",
            "Default": "1"
        },
        "CloudplexServerAutoscaleMaxSize": {
            "Description": "Maximum no. of EC2 instances for Snaplogic CloudplexServer Auto Scaling group",
            "Type": "Number",
            "MinValue": "1",
            "MaxValue": "10",
            "Default": "5"
        },
        "CloudplexServerAutoscaleDesiredCapacity": {
            "Description": "Desired no. of EC2 instances for Snaplogic CloudplexServer Auto Scaling group",
            "Type": "Number",
            "MinValue": "1",
            "MaxValue": "10",
            "Default": "1"
        },
        "NumBastionHosts": {
            "AllowedValues": [
                "0",
                "1",
                "2"
            ],
            "Default": "1",
            "Description": "The number of Linux bastion hosts to run. Auto Scaling will ensure that you always have this number of bastion hosts running.",
            "Type": "String"
        },
        "AvailabilityZones": {
            "Description": "Select two Availability Zones that will be used to deploy the CloudFormation stacks. The Quick Start preserves the logical order you specify.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "KeyPairName": {
            "Description": "Public/private key pair, which allows you to connect securely to your instance after it launches. When you created an AWS account, this is the key pair you created in your preferred region.",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "PrivateSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/19",
            "Description": "CIDR block for private subnet 1 located in Availability Zone 1.",
            "Type": "String"
        },
        "PrivateSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.32.0/19",
            "Description": "CIDR block for private subnet 2 located in Availability Zone 2.",
            "Type": "String"
        },
        "PublicSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.128.0/20",
            "Description": "CIDR block for the public DMZ subnet 1 located in Availability Zone 1",
            "Type": "String"
        },
        "PublicSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.144.0/20",
            "Description": "CIDR block for the public DMZ subnet 2 located in Availability Zone 2",
            "Type": "String"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "The CIDR IP range that is permitted to access the VPC. We recommend that you use a constrained CIDR range to reduce the potential of inbound attacks from unknown IP addresses. For example, if your IPv4 address is 203.0.113.25, specify 203.0.113.25/32 to list this single IPv4 address in CIDR notation. If your company allocates addresses from a range, specify the entire range, such as 203.0.113.0/24. For details, see VPCs and Subnets in the AWS documentation.",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block for the VPC. When you create a VPC, you must specify a range of IPv4 addresses for the VPC in the form of a Classless Inter-Domain Routing (CIDR) block. You can also optionally assign an IPv6 CIDR block to your VPC, and assign IPv6 CIDR blocks to your subnets.",
            "Default": "10.0.0.0/16",
            "Description": "CIDR block for the VPC",
            "Type": "String"
        }
    },
    "Mappings": {
        "Datasource": {
            "Redshift": {
                "port": "5439"
            }
        }
    },
    "Conditions": {
        "CreateBastionCondition": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NumBastionHosts"
                        },
                        "0"
                    ]
                }
            ]
        },
        "CreateRedshiftCondition": {
            "Fn::Equals": [
                "",
                {
                    "Ref": "RedshiftHost"
                }
            ]
        }
    },
    "Resources": {
        "VpcStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template"
                },
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "NumberOfAZs": "2",
                    "PrivateSubnet1ACIDR": {
                        "Ref": "PrivateSubnet1CIDR"
                    },
                    "PrivateSubnet2ACIDR": {
                        "Ref": "PrivateSubnet2CIDR"
                    },
                    "PublicSubnet1CIDR": {
                        "Ref": "PublicSubnet1CIDR"
                    },
                    "PublicSubnet2CIDR": {
                        "Ref": "PublicSubnet2CIDR"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },
        "BastionStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Condition": "CreateBastionCondition",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template"
                },
                "Parameters": {
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VpcStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VpcStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VpcStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "RemoteAccessCIDR": {
                        "Ref": "RemoteAccessCIDR"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "NumBastionHosts": {
                        "Ref": "NumBastionHosts"
                    },
                    "BastionAMIOS": "Amazon-Linux-HVM",
                    "BastionInstanceType": {
                        "Ref": "BastionInstanceType"
                    },
                    "BastionBanner": "https://aws-quickstart.s3.amazonaws.com/quickstart-linux-bastion/scripts/banner_message.txt",
                    "EnableBanner": "false",
                    "EnableTCPForwarding": "true",
                    "EnableX11Forwarding": "true"
                }
            }
        },
        "SnaplogicStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/snaplogic.template"
                },
                "Parameters": {
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "SnaplexconfS3KeyPrefix": {
                        "Ref": "SnaplexconfS3KeyPrefix"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "VpcId": {
                        "Fn::GetAtt": [
                            "VpcStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "SnapLogicLicenseBucket": {
                        "Ref": "SnapLogicLicenseBucket"
                    },
                    "PrivateSubnetId1": {
                        "Fn::GetAtt": [
                            "VpcStack",
                            "Outputs.PrivateSubnet1AID"
                        ]
                    },
                    "PrivateSubnetId2": {
                        "Fn::GetAtt": [
                            "VpcStack",
                            "Outputs.PrivateSubnet2AID"
                        ]
                    },
                    "InstanceType": {
                        "Ref": "InstanceType"
                    },
                    "RedshiftHost": {
                        "Ref": "RedshiftHost"
                    },
                    "RedshiftUsername": {
                        "Ref": "RedshiftUsername"
                    },
                    "RedshiftPassword": {
                        "Ref": "RedshiftPassword"
                    },
                    "RedshiftDbName": {
                        "Ref": "RedshiftDbName"
                    },
                    "RedshiftNodeType": {
                        "Ref": "RedshiftNodeType"
                    },
                    "RedshiftNumberOfNodes": {
                        "Ref": "RedshiftNumberOfNodes"
                    },
                    "CloudplexServerAutoscaleMaxSize": {
                        "Ref": "CloudplexServerAutoscaleMaxSize"
                    },
                    "CloudplexServerAutoscaleDesiredCapacity": {
                        "Ref": "CloudplexServerAutoscaleDesiredCapacity"
                    }
                }
            }
        }
    },
    "Outputs": {
        "VpcStack": {
            "Value": {
                "Ref": "VpcStack"
            },
            "Description": "Nested VPC stack",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}:VpcStack"
                }
            }
        },
        "BastionStack": {
            "Condition": "CreateBastionCondition",
            "Value": {
                "Ref": "BastionStack"
            },
            "Description": "Nested Bastion stack",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}:BastionStack"
                }
            }
        },
        "SnaplogicStack": {
            "Value": {
                "Ref": "SnaplogicStack"
            },
            "Description": "Nested Snaplogic stack",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}:SnaplogicStack"
                }
            }
        },
        "RedshiftJDBC": {
            "Condition": "CreateRedshiftCondition",
            "Value": {
                "Fn::GetAtt": [
                    "SnaplogicStack",
                    "Outputs.RedshiftJDBC"
                ]
            },
            "Description": "Redshift JDBC Url",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}:RedshiftJDBC"
                }
            }
        },
        "RedshiftEndpoint": {
            "Condition": "CreateRedshiftCondition",
            "Value": {
                "Fn::GetAtt": [
                    "SnaplogicStack",
                    "Outputs.RedshiftEndpoint"
                ]
            },
            "Description": "Redshift Endpoint",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}:RedshiftEndpoint"
                }
            }
        }
    }
}
