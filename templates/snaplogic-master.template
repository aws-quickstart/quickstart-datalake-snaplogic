{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template uses the Snaplogic Snaplex Server templates with the AWS VPC quickstart.  The AWS VPC creates a multi-AZ, multi-subnet VPC infrastructure with managed NAT gateways in the public subnet for each Availability Zone. The Snaplogic servers are deployed to the public subnet with the exception of the Groundplex servers which are deployed to the private subnet and Bastion servers to a VPC. **WARNING** This template creates AWS resources. You will be billed for the AWS resources used if you create a stack from this template. (qs-1pk2pq5n0)",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "VPC network configuration"
                    },
                    "Parameters": [
                        "AvailabilityZones",
                        "VPCCIDR",
                        "PrivateSubnet1CIDR",
                        "PrivateSubnet2CIDR",
                        "PublicSubnet1CIDR",
                        "PublicSubnet2CIDR",
                        "RemoteAccessCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Sizing configuration"
                    },
                    "Parameters": [
                        "KeyPairName",
                        "InstanceType",
                        "BastionInstanceType",
                        "NumBastionHosts",
                        "RedshiftNodeType",
                        "RedshiftNumberOfNodes"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon EC2 Auto Scaling configuration"
                    },
                    "Parameters": [
                        "CloudplexServerAutoscaleDesiredCapacity",
                        "CloudplexServerAutoscaleMaxSize"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon Redshift configuration"
                    },
                    "Parameters": [
                        "RedshiftHost",
                        "RedshiftUsername",
                        "RedshiftPassword",
                        "RedshiftDbName"
                    ]
                },
                {
                    "Label": {
                        "default": "SnapLogic configuration"
                    },
                    "Parameters": [
                        "SnapLogicLicenseBucket",
                        "SnaplexConfS3Key"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "QSS3BucketName": {
                    "default": "Quick Start S3 bucket name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 key prefix (optional)"
                },
                "SnapLogicLicenseBucket": {
                    "default": "SnapLogic license bucket"
                },
                "SnaplexConfS3Key": {
                    "default": "SnapLogic configuration path"
                },
                "InstanceType": {
                    "default": "Groundplex server instance type"
                },
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "VPCCIDR": {
                    "default": "VPC CIDR"
                },
                "PublicSubnet1CIDR": {
                    "default": "Public subnet 1 CIDR"
                },
                "PublicSubnet2CIDR": {
                    "default": "Public subnet 2 CIDR"
                },
                "PrivateSubnet1CIDR": {
                    "default": "Private subnet 1 CIDR"
                },
                "PrivateSubnet2CIDR": {
                    "default": "Private subnet 2 CIDR"
                },
                "RemoteAccessCIDR": {
                    "default": "Remote access CIDR"
                },
                "KeyPairName": {
                    "default": "Key pair name"
                },
                "CloudplexServerAutoscaleDesiredCapacity": {
                    "default": "Groundplex servers desired capacity"
                },
                "CloudplexServerAutoscaleMaxSize": {
                    "default": "Groundplex servers max size"
                },
                "RedshiftHost": {
                    "default": "Amazon Redshift host (optional)"
                },
                "RedshiftDbName": {
                    "default": "Redshift database name"
                },
                "RedshiftUsername": {
                    "default": "Redshift user name"
                },
                "RedshiftPassword": {
                    "default": "Redshift password"
                },
                "BastionInstanceType": {
                    "default": "Bastion instance type"
                },
                "NumBastionHosts": {
                    "default": "Number of bastion hosts"
                },
                "RedshiftNodeType": {
                    "default": "Amazon Redshift node type"
                },
                "RedshiftNumberOfNodes": {
                    "default": "Number of Amazon Redshift nodes"
                }
            }
        }
    },
    "Parameters": {
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, periods (.), and hyphens (-). It cannot start or end with a hyphen (-) or period (.).",
            "Default": "aws-quickstart",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, periods (.), and hyphens (-). It cannot start or end with a hyphen (-) or period (.).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).  Prefix cannot start with a slash but must end with a slash unless it is the empty string.",
            "Description": "The S3 key name prefix used to simulate a folder for your copy of Quick Start assets, if you decide to customize or extend the Quick Start for your own use. This prefix can include numbers, lowercase letters, uppercase letters, hyphens, and forward slashes",
            "Default": "quickstart-datalake-snaplogic/",
            "Type": "String"
        },
        "SnapLogicLicenseBucket": {
            "Description": "The Amazon S3 bucket where the SnapLogic license file is stored.",
            "Type": "String"
        },
        "SnaplexConfS3Key": {
            "Description": "The path at which SnapLogic configuration has been uploaded to the SnapLogic license S3 bucket.",
            "Type": "String"
        },
        "InstanceType": {
            "Description": "The Amazon EC2 instance type for the SnapLogic Groundplex servers.",
            "Type": "String",
            "Default": "t2.large",
            "AllowedValues": [
                "t2.medium",
                "t2.large",
                "t2.xlarge",
                "t2.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "m4.16xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "x1.16xlarge",
                "x1.32xlarge",
                "x1e.32xlarge",
                "r4.large",
                "r4.xlarge",
                "r4.2xlarge",
                "r4.4xlarge",
                "r4.8xlarge",
                "r4.16xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "i3.large",
                "i3.xlarge",
                "i3.2xlarge",
                "i3.4xlarge",
                "i3.8xlarge",
                "i3.16xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "BastionInstanceType": {
            "Description": "The Amazon EC2 instance type for the bastion instances.",
            "Type": "String",
            "Default": "t2.micro",
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ]
        },
        "RedshiftHost": {
            "Description": "DNS name or IP address of the master node of an existing Redshift cluster that you intend to use for the SnapLogic jobs. Leave this blank to create a new Redshift cluster.",
            "Type": "String",
            "Default": ""
        },
        "RedshiftUsername": {
            "Description": "The user name for the Redshift database.",
            "Type": "String",
            "Default": "tadmin"
        },
        "RedshiftPassword": {
            "Description": "The password for the Redshift database. Can only contain alphanumeric characters or the following special characters !^*-_+.",
            "NoEcho": true,
            "Type": "String",
            "MinLength": 8,
            "MaxLength": 28,
            "AllowedPattern": "[a-zA-Z0-9!^*\\-_+]*"
        },
        "RedshiftDbName": {
            "Description": "The name of the database to be created in the Redshift cluster. Please provide the valid database name if you are using an existing cluster. The name must contain only a-z or 0-9.",
            "Type": "String",
            "Default": "snaplogicdb"
        },
        "RedshiftNodeType": {
            "Type": "String",
            "Default": "dc2.large",
            "Description": "The node type to be provisioned for the Redshift cluster.",
            "ConstraintDescription": "must be a valid RedShift node type.",
            "AllowedValues": [
                "dc2.large",
                "dc2.8xlarge",
                "ds2.xlarge",
                "ds2.8xlarge"
            ]
        },
        "RedshiftNumberOfNodes": {
            "Description": "The number of nodes in the Redshift cluster.",
            "Type": "Number",
            "Default": "1"
        },
        "CloudplexServerAutoscaleMaxSize": {
            "Description": "The maximum number of Groundplex servers in the Auto Scaling group.",
            "Type": "Number",
            "MinValue": "1",
            "MaxValue": "10",
            "Default": "5"
        },
        "CloudplexServerAutoscaleDesiredCapacity": {
            "Description": "The desired capacity for Groundplex servers in the Auto Scaling group.",
            "Type": "Number",
            "MinValue": "1",
            "MaxValue": "10",
            "Default": "1"
        },
        "NumBastionHosts": {
            "AllowedValues": [
                "0",
                "1",
                "2"
            ],
            "Default": "1",
            "Description": "The number of Linux bastion hosts to run. Amazon EC2 Auto Scaling will ensure that you always have this number of bastion hosts running.",
            "Type": "String"
        },
        "AvailabilityZones": {
            "Description": "List of Availability Zones to use for the subnets in the VPC. Only two Availability Zones are used for this deployment, and the logical order of your selections is preserved.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "KeyPairName": {
            "Description": "Public/private key pair, which allows you to connect securely to your instance after it launches.",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "PrivateSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.0.0/19",
            "Description": "The CIDR block for private subnet 1 located in Availability Zone 1.",
            "Type": "String"
        },
        "PrivateSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.32.0/19",
            "Description": "The CIDR block for private subnet 2 located in Availability Zone 2.",
            "Type": "String"
        },
        "PublicSubnet1CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.128.0/20",
            "Description": "The CIDR block for the public DMZ subnet 1 located in Availability Zone 1.",
            "Type": "String"
        },
        "PublicSubnet2CIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
            "Default": "10.0.144.0/20",
            "Description": "The CIDR block for the public DMZ subnet 2 located in Availability Zone 2.",
            "Type": "String"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "The CIDR IP range that is permitted to access the VPC. We recommend that you use a constrained CIDR range to reduce the potential of inbound attacks from unknown IP addresses. For example, if your IPv4 address is 203.0.113.25, specify 203.0.113.25/32 to list this single IPv4 address in CIDR notation. If your company allocates addresses from a range, specify the entire range, such as 203.0.113.0/24. For details, see VPCs and Subnets in the AWS documentation.",
            "Type": "String"
        },
        "VPCCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
            "ConstraintDescription": "CIDR block for the VPC. When you create a VPC, you must specify a range of IPv4 addresses for the VPC in the form of a Classless Inter-Domain Routing (CIDR) block. You can also optionally assign an IPv6 CIDR block to your VPC, and assign IPv6 CIDR blocks to your subnets.",
            "Default": "10.0.0.0/16",
            "Description": "The CIDR block for the VPC.",
            "Type": "String"
        }
    },
    "Mappings": {
        "Datasource": {
            "Redshift": {
                "port": "5439"
            }
        }
    },
    "Conditions": {
        "CreateBastionCondition": {
            "Fn::Not": [
                {
                    "Fn::Equals": [
                        {
                            "Ref": "NumBastionHosts"
                        },
                        "0"
                    ]
                }
            ]
        },
        "CreateRedshiftCondition": {
            "Fn::Equals": [
                "",
                {
                    "Ref": "RedshiftHost"
                }
            ]
        }
    },
    "Resources": {
        "VpcStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template"
                },
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "NumberOfAZs": "2",
                    "PrivateSubnet1ACIDR": {
                        "Ref": "PrivateSubnet1CIDR"
                    },
                    "PrivateSubnet2ACIDR": {
                        "Ref": "PrivateSubnet2CIDR"
                    },
                    "PublicSubnet1CIDR": {
                        "Ref": "PublicSubnet1CIDR"
                    },
                    "PublicSubnet2CIDR": {
                        "Ref": "PublicSubnet2CIDR"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },
        "BastionStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Condition": "CreateBastionCondition",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}submodules/quickstart-linux-bastion/templates/linux-bastion.template"
                },
                "Parameters": {
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Fn::Sub": "${QSS3KeyPrefix}submodules/quickstart-linux-bastion/"
                    },
                    "VPCID": {
                        "Fn::GetAtt": [
                            "VpcStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "PublicSubnet1ID": {
                        "Fn::GetAtt": [
                            "VpcStack",
                            "Outputs.PublicSubnet1ID"
                        ]
                    },
                    "PublicSubnet2ID": {
                        "Fn::GetAtt": [
                            "VpcStack",
                            "Outputs.PublicSubnet2ID"
                        ]
                    },
                    "RemoteAccessCIDR": {
                        "Ref": "RemoteAccessCIDR"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "NumBastionHosts": {
                        "Ref": "NumBastionHosts"
                    },
                    "BastionAMIOS": "Amazon-Linux-HVM",
                    "BastionInstanceType": {
                        "Ref": "BastionInstanceType"
                    },
                    "BastionBanner": "https://aws-quickstart.s3.amazonaws.com/quickstart-linux-bastion/scripts/banner_message.txt",
                    "EnableBanner": "false",
                    "EnableTCPForwarding": "true",
                    "EnableX11Forwarding": "true"
                }
            }
        },
        "SnaplogicStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": {
                    "Fn::Sub": "https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}templates/snaplogic.template"
                },
                "Parameters": {
                    "QSS3BucketName": {
                        "Ref": "QSS3BucketName"
                    },
                    "QSS3KeyPrefix": {
                        "Ref": "QSS3KeyPrefix"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "VpcId": {
                        "Fn::GetAtt": [
                            "VpcStack",
                            "Outputs.VPCID"
                        ]
                    },
                    "SnapLogicLicenseBucket": {
                        "Ref": "SnapLogicLicenseBucket"
                    },
                    "SnaplexConfS3Key": {
                        "Ref": "SnaplexConfS3Key"
                    },
                    "PrivateSubnetId1": {
                        "Fn::GetAtt": [
                            "VpcStack",
                            "Outputs.PrivateSubnet1AID"
                        ]
                    },
                    "PrivateSubnetId2": {
                        "Fn::GetAtt": [
                            "VpcStack",
                            "Outputs.PrivateSubnet2AID"
                        ]
                    },
                    "InstanceType": {
                        "Ref": "InstanceType"
                    },
                    "RedshiftHost": {
                        "Ref": "RedshiftHost"
                    },
                    "RedshiftUsername": {
                        "Ref": "RedshiftUsername"
                    },
                    "RedshiftPassword": {
                        "Ref": "RedshiftPassword"
                    },
                    "RedshiftDbName": {
                        "Ref": "RedshiftDbName"
                    },
                    "RedshiftNodeType": {
                        "Ref": "RedshiftNodeType"
                    },
                    "RedshiftNumberOfNodes": {
                        "Ref": "RedshiftNumberOfNodes"
                    },
                    "CloudplexServerAutoscaleMaxSize": {
                        "Ref": "CloudplexServerAutoscaleMaxSize"
                    },
                    "CloudplexServerAutoscaleDesiredCapacity": {
                        "Ref": "CloudplexServerAutoscaleDesiredCapacity"
                    }
                }
            }
        }
    },
    "Outputs": {
        "VpcStack": {
            "Value": {
                "Ref": "VpcStack"
            },
            "Description": "Nested VPC stack",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}:VpcStack"
                }
            }
        },
        "BastionStack": {
            "Condition": "CreateBastionCondition",
            "Value": {
                "Ref": "BastionStack"
            },
            "Description": "Nested Bastion stack",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}:BastionStack"
                }
            }
        },
        "SnaplogicStack": {
            "Value": {
                "Ref": "SnaplogicStack"
            },
            "Description": "Nested Snaplogic stack",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}:SnaplogicStack"
                }
            }
        },
        "RedshiftJDBC": {
            "Condition": "CreateRedshiftCondition",
            "Value": {
                "Fn::GetAtt": [
                    "SnaplogicStack",
                    "Outputs.RedshiftJDBC"
                ]
            },
            "Description": "Redshift JDBC Url",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}:RedshiftJDBC"
                }
            }
        },
        "RedshiftEndpoint": {
            "Condition": "CreateRedshiftCondition",
            "Value": {
                "Fn::GetAtt": [
                    "SnaplogicStack",
                    "Outputs.RedshiftEndpoint"
                ]
            },
            "Description": "Redshift Endpoint",
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}:RedshiftEndpoint"
                }
            }
        }
    }
}
